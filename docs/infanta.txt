=================================================================
Infanta - A FeinCMS extension to manage contents of reusabble apps
=================================================================

Infanta helps you to easy-integrate and manage reusable apps in FeinCMS

============
INSTALLATION
============

- add 'feincms.infanta' to your INSTALLED_APPS

- add to your TEMPLATE_CONTEXT_PROCESSORS (order is important)
    
    'django.core.context_processors.request',
    'feincms.infanta.context_processors.add_page_and_template'

- add to your MIDDLEWARE_CLASSES
    
    'feincms.infanta.middleware.InfantaMiddleware',
  

- add to your app

    from feincms.infanta.models import ViewContent
    Page.create_content_type(ViewContent)

=====
HOWTO
=====

Be cautious: infanta is not fully tested yet!

In the admin, add a page with the url under which your reusable app gets accessed

e.g.:
  your urls looks like:
    
    urlpatterns = patterns('',
        url(r'^accounts/', include('userprofile.urls')),
        url(r'^(.*)/$', 'feincms.views.base.handler'),
    )

So add a page with the url 'accounts'. You can now add 'view content' as content to 
your regions. This is where the content from the reusable app is rendered. But see later.

Now follows the most uncomfortable part so far. In the templates of your reusable app's templates
change the block tags you want to be rendered in the feincms region to {% box region_name %}.
If the templates should extend the base template, also change {% extends "base.html" %} to
{% extends base_template %}, which will therefore extend from the template your defined for your page. 

e.g.:
  in the template of the reusable app
    
    {% extends "base.html" %}
    
    {% block content %}
    <h1>{{ user.name }}</h1>
    {% endblock %}
    
  change to 
    
    {% extend base_template %}

    {% box main %}
    <h1>{{ user.name }}</h1>
    {% endbox %}

The content will now be attached to the first 'view content' in the region 'main'.

And that's it. 

Django's template inheritance is working as normal.

e.g.:

  in the template of the reusable app
  
    {% block extrajs %}
    <script src="http://maps.google.com/maps?file=api&amp;v=2.x&amp;key={{ GOOGLE_MAPS_API_KEY }}" type="text/javascript"></script>
    {% enblock %}

  you can add to your base template in the <head> tag
    
    {% block extrajs %}{% endblock %}
  
  and the extrajs from the reusable app will be rendered in your base template